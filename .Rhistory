file = read.csv(i)
df1 = merge(df1,df2, by = "learner_id")
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[1])
for(i in filenames[2:length(filenames)]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1,df2, by = "learner_id")
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[1])
for(i in filenames[2:length(filenames)]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1, file, by = "learner_id")
}
}
head(df1)
View(file)
df1 <- data.frame(name = c("JMA", "PSA", "TAN", "POS"), HAN = c("0.2119", "-0.1726", "0.0002", "-1.036"), ENA = c("0.0736", "-1.6644", "0.0743", "-0.0605"), IUA = c("-0.2212", "-0.3352", "0.6301", "-0.2848"), MEA = c("0.3464", "0.4085", "0.5801", "0.3236"))
df2 <- data.frame(name = c("JMA", "PSA", "TAN", "POS"), YHD = c("0.3874", "-0.209", "-0.0614", "-1.8067"), PUH = c("0.0784", "-0.572", "0.0819", "-0.0628"), OUR = c("0.2297", "0.279", "0.3106", "0.3368" ), NKA = c("-0.5446", "-2.324", "-0.572", "-0.3626"))
df1 <- merge(df1,df1, by = "name")
df1
l = c(1,2,3,4,5,6,7,9)
print(l[c(1, 3:length(l))])
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1, file, by = "learner_id")
}
}
df1 = read.csv(filenames[2])
View(df1)
dim(df1)
dfff5 <- data.frame(name = c("JMA", "PSA", "TAN", "POS"), HAN = c("0.2119", "-0.1726", "0.0002", "-1.036"), ENA = c("0.0736", "-1.6644", "0.0743", "-0.0605"), IUA = c("-0.2212", "-0.3352", "0.6301", "-0.2848"), MEA = c("0.3464", "0.4085", "0.5801", "0.3236"))
df10 = data.frame()
dfff5 <- merge(dfff5,df10, by = "name")
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if(exists("learner_id", colnames(file))){
df1 = merge(df1, file, by = "learner_id")
}
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if(grep("learner_id", colnames(file))){
df1 = merge(df1, file, by = "learner_id")
}
}
}
dim(file)
file
colnames(file)
grep("learner_id", colnames(file))
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if(grep("learner_id", colnames(file)) != 0){
df1 = merge(df1, file, by = "learner_id")
}
}
}
grep("learner_id", colnames(file)) != 0
grep("learner_id", colnames(file)) == 0
if(grep("learner_id", colnames(file)) == 0){ print("Hello")}
if(grep("learner_id", colnames(file)) != 0){ print("Hello")}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if("learner_id" == colnames(file)){
df1 = merge(df1, file, by = "learner_id")
}
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
flag = which(colnames(file) == "learner_id")
if(length(flag) !=0 ){
df1 = merge(df1, file, by = "learner_id")
}
}
View(leaving_df)
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
flag = which(colnames(file) == "learner_id")
if(length(flag) !=0 ){
df1 = merge(df1, file, by = "learner_id")
}
}
}
dim(df1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(aes(y = c(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)))
# library('ProjectTemplate')
# load.project()
# Selecting video stats data from all the iterations of the course...
# video_df = get(project.info$cache[7])
# Finding which device is being use more often to access the course content...
desktop_percentage = video %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
# Creating a dataframe of topic wise device used...
device_df = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
# Converting the wide data to long data...
device_df = melt(device_df, id.vars = c('title'))
colnames(device_df) <- c('title', 'Device', 'Percentage_Watch')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
# Extracting all the files with video stats...
#vid_filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
# vid_ldf <- lapply(vid_filenames, read.csv)
# vid_index = grep("video_duration", vid_ldf)
# Calculating mean of watch percentage of each device for each iteration of the course...
# mean_vid_df3 = vid_ldf[vid_index[1]][[1]][, c(17, 18, 20)]
mean_vid_df3 = cyber.security.3_video.stats[, c(17, 18, 20)]
iteration_3 = colMeans(mean_vid_df3)
mean_vid_df4 = cyber.security.4_video.stats[, c(17, 18, 20)]
iteration_4 = colMeans(mean_vid_df4)
mean_vid_df5 = cyber.security.5_video.stats[, c(17, 18, 20)]
iteration_5 = colMeans(mean_vid_df5)
mean_vid_df6 = cyber.security.6_video.stats[, c(17, 18, 20)]
iteration_6 = colMeans(mean_vid_df6)
mean_vid_df7 = cyber.security.7_video.stats[, c(17, 18, 20)]
iteration_7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# # mean_df = scale(mean_df)
# mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
# ggplot(as.data.frame(mean_df), aes(x = V4))+
#   geom_line(aes(y = desktop_device_percentage), col = "red")+
#   geom_line(aes(y = mobile_device_percentage), col = "blue")+
#   geom_line(aes(y = tablet_device_percentage), col = "green")
# Converting the wide data to long data...
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(aes(y = c(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)))
dev.off()
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# Converting the wide data to long data...
long_mean_df = melt(mean_df)
colnames(long_mean_df) = c('Iteration', 'Device', 'Watch_Time')
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(data = mean_df, aes(y = c(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)))
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(mean_df, aes(y = c(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)))
View(mean_df)
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(mean_df, aes(y = mobile_device_percentage))
rlang::last_error()
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(mean_df, mapping = aes(y = mobile_device_percentage))
rlang::last_error()
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(data = mean_df, mapping = aes(y = mobile_device_percentage))
class(mean_df)
class(as.data.frame(mean_df))
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(data = as.data.frame(mean_df), mapping = aes(y = mobile_device_percentage))
rlang::last_error()
ggplot()+
geom_bar(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(data = as.data.frame(mean_df), mapping = aes(y = mobile_device_percentage))
ggplot()+
geom_bar(data = long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(data = as.data.frame(mean_df), mapping = aes(y = mobile_device_percentage))
ggplot()+
geom_bar(data = long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(data = as.data.frame(mean_df), mapping = aes(x = "", y = mobile_device_percentage))
mean_df$idx = c(3:7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7, c(3:7))
View(mean_df)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7, c(3:6))
View(mean_df)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(mean_df, mapping = aes(x = as.factor(rownames(mean_df), levels = as.character(rownames(mean_df))), y = mobile_device_percentage))
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df), levels = as.character(rownames(mean_df))), y = mobile_device_percentage))
ggplot(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage))
ggplot()+
geom_bar(long_mean_df, aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage))
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage))
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1), col = "green")
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))+
ylab("Watch Time Percent")
library(readr)
alpha2lat <- read_csv("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/alpha2lat.csv")
View(alpha2lat)
View(enrolments)
# People from which region...
colnames(alpha2lat)[2] = detected_country
# People from which region...
colnames(alpha2lat)[2] = "detected_country"
with_coordinates = merge(x=enrolments,y=alpha2lat[,c(2,5,6)],by="detected_country",all.x=TRUE)
View(with_coordinates)
colnames(with_coordinates)
colnames(with_coordinates)[14] = "lat"
colnames(with_coordinates)[15] = "long"
colnames(with_coordinates)
ggplot() +
geom_map(
data = with_coordinates, map = world,
aes(long, lat, map_id = region)
)
world <- map_data("world")
world <- map_data("world")
ggplot() +
geom_map(data = with_coordinates, map = world, aes(long, lat, map_id = region))
ggplot() +
geom_map(data = with_coordinates, map = world, aes(long, lat, map_id = learner_id))
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))
View(world)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
ggplot() +
geom_polygon(data = world, map = world, aes(long, lat, map_id = region))+
geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
ggplot() +
geom_polygon(data = world, map = world, mapping = aes(long, lat, map_id = region))+
geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
ggplot() +
geom_polygon(data = world, map = world, mapping = aes(long, lat, map_id = region))
ggplot(data = with_coordinates,mapping = aes(long, lat)) +
geom_polygon()
geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
ggplot() +
geom_polygon(data = world, map = world, mapping = aes(long, lat, map_id = region))+
geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
count(with_coordinates$detected_country)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
#geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha = 0.25),
size = 0.01, bins = 30, data = detected_country,
geom = "polygon"
)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
#geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha = 0.25),
size = 0.01, bins = 30, data = with_coordinates,
geom = "polygon"
)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
#geom_point(data = with_coordinates, aes(long, lat, color = detected_country), alpha = 0.7)
stat_density2d(
aes(x = long, y = lat, fill = ..level.., alpha = 0.25),
size = 0.01, bins = 30, data = with_coordinates,
geom = "polygon"
)
table(with_coordinates$detected_country)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = with_coordinates, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "white")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = with_coordinates, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = with_coordinates, geom = "polygon")
without_na = with_coordinates[!is.na(with_coordinates$long),]
View(without_na)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region))+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region, fill = "yellow"))+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level..), size = 1, bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), size = 1, bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
View(enrolments)
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png', width = 1920, height = 1080)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))+
ylab("Watch Time Percent")
dev.off()
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
View(cyber.security.3_video.stats)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.r')
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
View(config)
library('ProjectTemplate')
load.project()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R')
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
source("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R")
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png', width = 1920, height = 1080)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
dev.off()
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))+
ylab("Watch Time Percent")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R')
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
# People from which region...
colnames(alpha2lat)[2] = "detected_country"
setwd('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/')
print("-------------------- PERFORMING EDA ----------------------------------")
library('ProjectTemplate')
load.project()
# Selecting video stats data from all the iterations of the course...
# video_df = get(project.info$cache[7])
# People from which region...
colnames(alpha2lat)[2] = "detected_country"
alpha2lat$detected_country = trimws(alpha2lat$detected_country)
with_coordinates = merge(x = enrolments, y = alpha2lat[,c(2,5,6)], by = "detected_country", all.x = TRUE)
colnames(with_coordinates)[14] = "lat"
colnames(with_coordinates)[15] = "long"
world <- map_data("world")
without_na = with_coordinates[!is.na(with_coordinates$long),]
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png', width = 1920, height = 1080)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
dev.off()
#######################################################################################################################################
# Finding which device is being use more often to access the course content...
desktop_percentage = video %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
# Creating a dataframe of topic wise device used...
device_df = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
# Converting the wide data to long data...
device_df = melt(device_df, id.vars = c('title'))
colnames(device_df) <- c('title', 'Device', 'Percentage_Watch')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
########################################################################################################################################
# Calculating mean of watch percentage of each device for each iteration of the course...
mean_vid_df3 = cyber.security.3_video.stats[, c(17, 18, 20)]
iteration_3 = colMeans(mean_vid_df3)
mean_vid_df4 = cyber.security.4_video.stats[, c(17, 18, 20)]
iteration_4 = colMeans(mean_vid_df4)
mean_vid_df5 = cyber.security.5_video.stats[, c(17, 18, 20)]
iteration_5 = colMeans(mean_vid_df5)
mean_vid_df6 = cyber.security.6_video.stats[, c(17, 18, 20)]
iteration_6 = colMeans(mean_vid_df6)
mean_vid_df7 = cyber.security.7_video.stats[, c(17, 18, 20)]
iteration_7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# # mean_df = scale(mean_df)
# mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
# ggplot(as.data.frame(mean_df), aes(x = V4))+
#   geom_line(aes(y = desktop_device_percentage), col = "red")+
#   geom_line(aes(y = mobile_device_percentage), col = "blue")+
#   geom_line(aes(y = tablet_device_percentage), col = "green")
# Converting the wide data to long data...
long_mean_df = melt(mean_df)
colnames(long_mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))+
ylab("Watch Time Percent")
dev.off()
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
