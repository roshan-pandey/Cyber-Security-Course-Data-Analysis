print(ldf[team_index])
# Reading all the files and merging similar files...
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
#reading all the csv files...
ldf <- lapply(filenames, read.csv)
print(ldf[team_index])
team_index = grep("team", ldf)
print(ldf[team_index])
dim(rbind(data.frame(ldf[team_index])))
dim(cbind(data.frame(ldf[team_index])))
dim(cbind(ldf[team_index]))
dim(rbind(ldf[team_index]))
dim(ldf)
head(ldf)
length(ldf)
dim(rbind(ldf[[team_index]]))
dim(rbind(ldf[team_index]))
archetype_index = grep("archetype", ldf)
enrolments_index = grep("enrol", ldf)
leaving_index = grep("leaving", ldf)
question_index = grep("question", ldf)
step_index = grep("step-activity", ldf)
video_index = grep("video", ldf)
weekly_index = grep("weekly", ldf)
team_index = grep("team", ldf)
weekly_index = grep("sentiment", ldf)
length(ldf[5])
print(ldf[5])
print(ldf[1])
step_index = grep("step_number", ldf)
step_index = grep("first_visited_at", ldf)
weekly_index = grep("experience_rating", ldf)
video_index = grep("video_duration", ldf)
archetype_df = rbind(data.frame(ldf[1]), data.frame(ldf[7]), data.frame(ldf[14]), data.frame(ldf[22]), data.frame(ldf[30]), data.frame(ldf[38]), data.frame(ldf[46]))
enrolments_df = rbind(data.frame(ldf[2]), data.frame(ldf[8]), data.frame(ldf[15]), data.frame(ldf[23]), data.frame(ldf[31]), data.frame(ldf[39]), data.frame(ldf[47]))
leaving_df = rbind(data.frame(ldf[3]), data.frame(ldf[9]), data.frame(ldf[16]), data.frame(ldf[24]), data.frame(ldf[32]), data.frame(ldf[40]), data.frame(ldf[48]))
question_df = rbind(data.frame(ldf[4]), data.frame(ldf[10]), data.frame(ldf[17]), data.frame(ldf[25]), data.frame(ldf[33]), data.frame(ldf[41]), data.frame(ldf[49]))
step_df = rbind(data.frame(ldf[5]), data.frame(ldf[11]), data.frame(ldf[18]), data.frame(ldf[26]), data.frame(ldf[34]), data.frame(ldf[42]), data.frame(ldf[50]))
video_df = rbind(data.frame(ldf[20]), data.frame(ldf[28]), data.frame(ldf[36]), data.frame(ldf[44]), data.frame(ldf[52]))
weekly_df = rbind(data.frame(ldf[6]), data.frame(ldf[13]), data.frame(ldf[21]), data.frame(ldf[29]), data.frame(ldf[37]), data.frame(ldf[45]), data.frame(ldf[53]))
team_df = rbind(data.frame(ldf[12]), data.frame(ldf[19]), data.frame(ldf[27]), data.frame(ldf[35]), data.frame(ldf[43], data.frame(ldf[51])))
team_df = rbind(data.frame(ldf[12]), data.frame(ldf[19]), data.frame(ldf[27]), data.frame(ldf[35]), data.frame(ldf[43]), data.frame(ldf[51])))
team_df = rbind(data.frame(ldf[12]), data.frame(ldf[19]), data.frame(ldf[27]), data.frame(ldf[35]), data.frame(ldf[43]), data.frame(ldf[51]))
getwd()
getwd()
# writing the data frame to csv files...
write.csv(archetype_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/archetype.csv", row.names = FALSE)
write.csv(enrolments_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/enrolments.csv", row.names = FALSE)
write.csv(leaving_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/leaving.csv", row.names = FALSE)
write.csv(question_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/question.csv", row.names = FALSE)
write.csv(step_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/step.csv", row.names = FALSE)
write.csv(weekly_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/weekly.csv", row.names = FALSE)
write.csv(video_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/video.csv", row.names = FALSE)
write.csv(team_df,"C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/data_v1/team.csv", row.names = FALSE)
# # Joining data based on learners ID for each iteration of the course...
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*1*.csv", full.names=TRUE)
print(filenames)
# # Joining data based on learners ID for each iteration of the course...
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*[1]*.csv", full.names=TRUE)
print(filenames)
# # Joining data based on learners ID for each iteration of the course...
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*1+.csv", full.names=TRUE)
print(filenames)
# # Joining data based on learners ID for each iteration of the course...
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern=".1[.]csv", full.names=TRUE)
print(filenames)
# # Joining data based on learners ID for each iteration of the course...
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern=".*1[.]csv", full.names=TRUE)
print(filenames)
for(i in filenames){
if(str_contains(i, "1"))
print(i)
}
print(i)
for(i in filenames){
print(i)
if(str_contains(i, "1"))
print(i)
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
for(i in filenames){
print(i)
if(str_contains(i, "1"))
print(i)
}
library(sjmisc)
install.packages('sjmisc')
library(sjmisc)
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
for(i in filenames){
print(i)
if(str_contains(i, "1"))
print(i)
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
for(i in filenames){
if(str_contains(i, "1"))
print(i)
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
for(i in filenames){
if(str_contains(i, "-1_"))
print(i)
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[1])
for(i in filenames[2:length(filename)]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1,df2, by = "learner_id")
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[1])
for(i in filenames[2:length(filenames)]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1,df2, by = "learner_id")
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[1])
for(i in filenames[2:length(filenames)]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1, file, by = "learner_id")
}
}
head(df1)
View(file)
df1 <- data.frame(name = c("JMA", "PSA", "TAN", "POS"), HAN = c("0.2119", "-0.1726", "0.0002", "-1.036"), ENA = c("0.0736", "-1.6644", "0.0743", "-0.0605"), IUA = c("-0.2212", "-0.3352", "0.6301", "-0.2848"), MEA = c("0.3464", "0.4085", "0.5801", "0.3236"))
df2 <- data.frame(name = c("JMA", "PSA", "TAN", "POS"), YHD = c("0.3874", "-0.209", "-0.0614", "-1.8067"), PUH = c("0.0784", "-0.572", "0.0819", "-0.0628"), OUR = c("0.2297", "0.279", "0.3106", "0.3368" ), NKA = c("-0.5446", "-2.324", "-0.572", "-0.3626"))
df1 <- merge(df1,df1, by = "name")
df1
l = c(1,2,3,4,5,6,7,9)
print(l[c(1, 3:length(l))])
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
df1 = merge(df1, file, by = "learner_id")
}
}
df1 = read.csv(filenames[2])
View(df1)
dim(df1)
dfff5 <- data.frame(name = c("JMA", "PSA", "TAN", "POS"), HAN = c("0.2119", "-0.1726", "0.0002", "-1.036"), ENA = c("0.0736", "-1.6644", "0.0743", "-0.0605"), IUA = c("-0.2212", "-0.3352", "0.6301", "-0.2848"), MEA = c("0.3464", "0.4085", "0.5801", "0.3236"))
df10 = data.frame()
dfff5 <- merge(dfff5,df10, by = "name")
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if(exists("learner_id", colnames(file))){
df1 = merge(df1, file, by = "learner_id")
}
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if(grep("learner_id", colnames(file))){
df1 = merge(df1, file, by = "learner_id")
}
}
}
dim(file)
file
colnames(file)
grep("learner_id", colnames(file))
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if(grep("learner_id", colnames(file)) != 0){
df1 = merge(df1, file, by = "learner_id")
}
}
}
grep("learner_id", colnames(file)) != 0
grep("learner_id", colnames(file)) == 0
if(grep("learner_id", colnames(file)) == 0){ print("Hello")}
if(grep("learner_id", colnames(file)) != 0){ print("Hello")}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
if("learner_id" == colnames(file)){
df1 = merge(df1, file, by = "learner_id")
}
}
}
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
flag = which(colnames(file) == "learner_id")
if(length(flag) !=0 ){
df1 = merge(df1, file, by = "learner_id")
}
}
View(leaving_df)
filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
df1 = read.csv(filenames[2])
for(i in filenames[c(1, 3:length(filenames))]){
if(str_contains(i, "-1_")){
file = read.csv(i)
flag = which(colnames(file) == "learner_id")
if(length(flag) !=0 ){
df1 = merge(df1, file, by = "learner_id")
}
}
}
dim(df1)
library('ProjectTemplate')
load.project()
setwd('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis')
library('ProjectTemplate')
load.project()
lapply(c('reshape2', 'plyr', 'tidyverse', 'stringr', 'lubridate', 'sjmisc', 'shiny', 'ggplot2', 'dplyr', 'knitr', 'GGally', 'gridExtra'), require, character.only = TRUE)
library('ProjectTemplate')
load.project()
# Finding which device is being use more often to access the course content...
desktop_percentage = video_df %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
# library('ProjectTemplate')
# load.project()
# Selecting video stats data from all the iterations of the course...
video_df = get(project.info$cache[7])
# Finding which device is being use more often to access the course content...
desktop_percentage = video_df %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video_df %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video_df %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
# Creating a dataframe of topic wise device used...
device_df = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
# Converting the wide data to long data...
device_df = melt(device_df, id.vars = c('title'))
colnames(device_df) <- c('title', 'Device', 'Percentage_Watch')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
# Extracting all the files with video stats...
vid_filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
vid_ldf <- lapply(vid_filenames, read.csv)
vid_index = grep("video_duration", vid_ldf)
# Calculating mean of watch percentage of each device for each iteration of the course...
mean_vid_df3 = vid_ldf[vid_index[1]][[1]][, c(17, 18, 20)]
col_means3 = colMeans(mean_vid_df3)
mean_vid_df4 = vid_ldf[vid_index[2]][[1]][, c(17, 18, 20)]
col_means4 = colMeans(mean_vid_df4)
mean_vid_df5 = vid_ldf[vid_index[3]][[1]][, c(17, 18, 20)]
col_means5 = colMeans(mean_vid_df5)
mean_vid_df6 = vid_ldf[vid_index[4]][[1]][, c(17, 18, 20)]
col_means6 = colMeans(mean_vid_df6)
mean_vid_df7 = vid_ldf[vid_index[5]][[1]][, c(17, 18, 20)]
col_means7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(col_means3, col_means4, col_means5, col_means6, col_means7)
# Converting the wide data to long data...
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
# Selecting video stats data from all the iterations of the course...
video_df = get(project.info$cache[7])
# Selecting video stats data from all the iterations of the course...
video_df = get(project.info$data[7])
video_df = video
desktop_percentage = video_df %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video_df %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video_df %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
# Creating a dataframe of topic wise device used...
device_df = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
# Converting the wide data to long data...
device_df = melt(device_df, id.vars = c('title'))
colnames(device_df) <- c('title', 'Device', 'Percentage_Watch')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
# Extracting all the files with video stats...
vid_filenames <- list.files("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/data/raw_data", pattern="*.csv", full.names=TRUE)
vid_ldf <- lapply(vid_filenames, read.csv)
vid_index = grep("video_duration", vid_ldf)
# Calculating mean of watch percentage of each device for each iteration of the course...
mean_vid_df3 = vid_ldf[vid_index[1]][[1]][, c(17, 18, 20)]
col_means3 = colMeans(mean_vid_df3)
mean_vid_df4 = vid_ldf[vid_index[2]][[1]][, c(17, 18, 20)]
col_means4 = colMeans(mean_vid_df4)
mean_vid_df5 = vid_ldf[vid_index[3]][[1]][, c(17, 18, 20)]
col_means5 = colMeans(mean_vid_df5)
mean_vid_df6 = vid_ldf[vid_index[4]][[1]][, c(17, 18, 20)]
col_means6 = colMeans(mean_vid_df6)
mean_vid_df7 = vid_ldf[vid_index[5]][[1]][, c(17, 18, 20)]
col_means7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(col_means3, col_means4, col_means5, col_means6, col_means7)
# Converting the wide data to long data...
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
library('ProjectTemplate')
load.project()
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
geom_line(aes(y = c(1:10)))
View(video_df)
View(device_df)
getwd()
View(cyber.security.3_video.stats)
# mean_vid_df3 = vid_ldf[vid_index[1]][[1]][, c(17, 18, 20)]
mean_vid_df3 = cyber.security.3_video.stats[, c(17, 18, 20)]
View(mean_vid_df3)
col_means3 = colMeans(mean_vid_df3)
mean_vid_df3 = cyber.security.3_video.stats[, c(17, 18, 20)]
col_means3 = colMeans(mean_vid_df3)
mean_vid_df4 = cyber.security.4_video.stats[, c(17, 18, 20)]
col_means4 = colMeans(mean_vid_df4)
mean_vid_df5 = cyber.security.5_video.stats[, c(17, 18, 20)]
col_means5 = colMeans(mean_vid_df5)
mean_vid_df6 = cyber.security.6_video.stats[, c(17, 18, 20)]
col_means6 = colMeans(mean_vid_df6)
mean_vid_df7 = cyber.security.7_video.stats[, c(17, 18, 20)]
col_means7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(col_means3, col_means4, col_means5, col_means6, col_means7)
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
View(mean_df)
iteration_3 = colMeans(mean_vid_df3)
iteration_4 = colMeans(mean_vid_df4)
iteration_5 = colMeans(mean_vid_df5)
iteration_6 = colMeans(mean_vid_df6)
iteration_7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(col_means3, col_means4, col_means5, col_means6, col_means7)
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
View(mean_df)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
View(video)
View(mean_df)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())
dev.off()
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
ggplot(mean_df, aes(x = c(3:7)))+
geom_line(aes(y = desktop_device_percentage))
mean_df$itr_num = c(3:7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
View(mean_df)
mean_df$itr_num = c(3, 4, 5, 6, 7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
ggplot(mean_df, aes(x = as.data.frame(c(3:7))))+
geom_line(aes(y = desktop_device_percentage))
ggplot(mean_df, aes(x = data.frame(c(3:7))))+
geom_line(aes(y = desktop_device_percentage))
ggplot(mean_df, aes(x = fortify(c(3:7))))+
geom_line(aes(y = desktop_device_percentage))
mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
ggplot(mean_df, aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))+
geom_line(aes(y = mobile_device_percentage))+
geom_line(aes(y = tablet_device_percentage))
mean_df = scale(mean_df)
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))+
geom_line(aes(y = mobile_device_percentage))+
geom_line(aes(y = tablet_device_percentage))
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
mean_df = scale(mean_df[,1:ncol(mean_df)-1])
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))+
geom_line(aes(y = mobile_device_percentage))+
geom_line(aes(y = tablet_device_percentage))
mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
mean_df = scale(mean_df[,1:ncol(mean_df)-1])
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))+
geom_line(aes(y = mobile_device_percentage))+
geom_line(aes(y = tablet_device_percentage))
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
mean_df = scale(mean_df)
mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage))+
geom_line(aes(y = mobile_device_percentage))+
geom_line(aes(y = tablet_device_percentage))
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage), col = "red")+
geom_line(aes(y = mobile_device_percentage), col = "blue")+
geom_line(aes(y = tablet_device_percentage), col = "green")
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# mean_df = scale(mean_df)
mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
ggplot(as.data.frame(mean_df), aes(x = V4))+
geom_line(aes(y = desktop_device_percentage), col = "red")+
geom_line(aes(y = mobile_device_percentage), col = "blue")+
geom_line(aes(y = tablet_device_percentage), col = "green")
View(video)
View(enrolments)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
mean_df = melt(mean_df)
colnames(mean_df) = c('Iteration', 'Device', 'Watch_Time')
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot(mean_df, aes(x = Iteration, y = Watch_Time, fill = Device))+
geom_bar(stat='identity', position = position_dodge())
dev.off()
