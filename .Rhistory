aes(x=long, y=lat, map_id=id),
color="black")
gg <- gg + geom_map(data=cont_data,
map=continents_map,
aes(map_id=id, fill=value),
color="black")
gg <- gg + scale_fill_distiller("PuBu") # needs latest ggplot2
gg <- gg + coord_equal()
gg <- gg + theme_bw()
gg <- gg + labs(x=NULL, y=NULL)
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(panel.grid=element_blank())
gg
ggplot()+
geom_map(data=continents_map,
map=continents_map,
aes(x=long, y=lat, map_id=id),
color="gray")+
geom_map(data=cont_data,
map=continents_map,
aes(map_id=id, fill=value),
color="black")+
scale_fill_distiller("Percentage Views")+ # needs latest ggplot2
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map,
map=continents_map,
aes(x=long, y=lat, map_id=id),
color="gray")+
geom_map(data=cont_data,
map=continents_map,
aes(map_id=id, fill=value),
color="gray")+
scale_fill_distiller("Percentage Views")+ # needs latest ggplot2
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map,
map=continents_map,
aes(x=long, y=lat, map_id=id),
color="lightgray")+
geom_map(data=cont_data,
map=continents_map,
aes(map_id=id, fill=value),
color="gray")+
scale_fill_distiller("Percentage Views")+ # needs latest ggplot2
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map,
map=continents_map,
aes(x=long, y=lat, map_id=id),
color="lightgray")+
geom_map(data=cont_data,
map=continents_map,
aes(map_id=id, fill=value),
color="lightgray")+
scale_fill_distiller("Percentage Views")+ # needs latest ggplot2
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="black")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="black")+
scale_fill_distiller("Percentage Views")+
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="black")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
scale_fill_gradient(low = "pink", high = "green")
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id), color="gray")+
scale_fill_distiller("Percentage Views")+
scale_fill_gradient(low = "pink", high = "green")
coord_equal()+
# theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
coord_equal()+
# theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
# theme_bw()+
labs(x=NULL, y=NULL)+
theme(panel.border=element_blank())+
theme(panel.grid=element_blank())
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
theme_bw()+
labs(x=NULL, y=NULL)
source("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R", echo=TRUE)
source("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R", echo=TRUE)
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
View(weekly)
View(continents_map)
cont_data = read.table(text="id  value
Europe  59.185692
Oceania 4.355385
Asia  15.287538
North_America 10.400154
South_America 2.140462
Africa  7.450000", header=TRUE, stringsAsFactors=TRUE)
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
ggplot()+
geom_map(data=continents_map, map=continents_map, aes(x=long, y=lat, map_id=id), color="gray")+
geom_map(data=cont_data, map=continents_map, aes(map_id=id, fill=value), color="gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
cont_data = read.table(text="id  value
Europe  59.185692
Oceania 4.355385
Asia  15.287538
North America 10.400154
South America 2.140462
Africa  7.450000", header=TRUE, stringsAsFactors=TRUE)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = continents_map, geom = "polygon")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
ggplot()+
# geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = continents_map, geom = "polygon")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
# geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = continents_map, geom = "polygon")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
cont_data = read.table(text="id  value
Europe  59.185692
Oceania 4.355385
Asia  15.287538
North_America 10.400154
South_America 2.140462
Africa  7.450000
Antartica 0", header=TRUE, stringsAsFactors=FALSE)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
cont_data = read.table(text="id  value
Europe  59.185692
Oceania 4.355385
Asia  15.287538
North_America 10.400154
South_America 2.140462
Africa  7.450000
Antarctica 0", header=TRUE, stringsAsFactors=FALSE)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
cont_data = read.table(text="id  value
Europe  59.185692
Australia 4.355385
Asia  15.287538
North_America 10.400154
South_America 2.140462
Africa  7.450000
Antarctica 0", header=TRUE, stringsAsFactors=FALSE)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
cont_data = read.table(text="id  value
Europe,  59.185692
Australia, 4.355385
Asia,  15.287538
North America, 10.400154
South America, 2.140462
Africa,  7.450000
Antarctica, 0", header=TRUE, stringsAsFactors=FALSE, sep = ",")
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
cont_data = read.table(text="id,  value
Europe,  59.185692
Australia, 4.355385
Asia,  15.287538
North America, 10.400154
South America, 2.140462
Africa,  7.450000
Antarctica, 0", header=TRUE, stringsAsFactors=FALSE, sep = ",")
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
# scale_fill_gradient(low = "pink", high = "green")+
coord_equal()+
labs(x=NULL, y=NULL)
# setwd('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/')
# print("-------------------- PERFORMING EDA ----------------------------------")
# library('ProjectTemplate')
# load.project()
# Selecting video stats data from all the iterations of the course...
# video_df = get(project.info$cache[7])
world <- map_data("world")
# views_mean = colMeans(video[,c(22:27)])
# col_names = c('Europe', 'Oceania', 'Asia', 'NA', 'SA', 'Africa')
# long = c(20, 150, -100, 80, -60, 15)
# lat = c(50, -25, 40, 35, -15, 15)
# continent = data.frame(region = col_names, views = views_mean, lat = lat, long = long, stringsAsFactors = F)
# # continent = inner_join(world, continent, by = "region")
# Reference: https://stackoverflow.com/questions/28078431/how-to-create-a-world-heat-map-in-r-on-continent-level
url = "https://gist.githubusercontent.com/hrbrmstr/91ea5cc9474286c72838/raw/f3fde312c9b816dff3994f39f2bcda03209eff8f/continents.json"
stop_for_status(GET(url, write_disk("continents.json")))
continents = readOGR("continents.json")
continents_map = fortify(continents, region="CONTINENT")
cont_data = read.table(text="id,  value
Europe,  59.185692
Australia, 4.355385
Asia,  15.287538
North America, 10.400154
South America, 2.140462
Africa,  7.450000
Antarctica, 0", header=TRUE, stringsAsFactors=FALSE, sep = ",")
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
coord_equal()+
labs(x=NULL, y=NULL)
dev.off()
#####################################################################################################################################
# People from which region...
colnames(alpha2lat)[2] = "detected_country"
alpha2lat$detected_country = trimws(alpha2lat$detected_country)
with_coordinates = merge(x = enrolments, y = alpha2lat[,c(2,5,6)], by = "detected_country", all.x = TRUE)
colnames(with_coordinates)[14] = "lat"
colnames(with_coordinates)[15] = "long"
without_na = with_coordinates[!is.na(with_coordinates$long),]
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
dev.off()
#######################################################################################################################################
# Finding which device is being use more often to access the course content...
desktop_percentage = video %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
# Creating a dataframe of topic wise device used...
device_df = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
# Converting the wide data to long data...
device_df = melt(device_df, id.vars = c('title'))
colnames(device_df) <- c('title', 'Device', 'Percentage_Watch')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
########################################################################################################################################
# Calculating mean of watch percentage of each device for each iteration of the course...
mean_vid_df3 = cyber.security.3_video.stats[, c(17, 18, 20)]
iteration_3 = colMeans(mean_vid_df3)
mean_vid_df4 = cyber.security.4_video.stats[, c(17, 18, 20)]
iteration_4 = colMeans(mean_vid_df4)
mean_vid_df5 = cyber.security.5_video.stats[, c(17, 18, 20)]
iteration_5 = colMeans(mean_vid_df5)
mean_vid_df6 = cyber.security.6_video.stats[, c(17, 18, 20)]
iteration_6 = colMeans(mean_vid_df6)
mean_vid_df7 = cyber.security.7_video.stats[, c(17, 18, 20)]
iteration_7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# # mean_df = scale(mean_df)
# mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
# ggplot(as.data.frame(mean_df), aes(x = V4))+
#   geom_line(aes(y = desktop_device_percentage), col = "red")+
#   geom_line(aes(y = mobile_device_percentage), col = "blue")+
#   geom_line(aes(y = tablet_device_percentage), col = "green")
# Converting the wide data to long data...
long_mean_df = melt(mean_df)
colnames(long_mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/4.png', width = 1920, height = 1080)
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))+
ylab("Watch Time Percent")
dev.off()
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/4.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/4.png")
setwd("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R')
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/4.png")
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
coord_equal()+
labs(x=NULL, y=NULL)
dev.off()
world <- map_data("world")
# setwd('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/')
# print("-------------------- PERFORMING EDA ----------------------------------")
# library('ProjectTemplate')
# load.project()
# Selecting video stats data from all the iterations of the course...
# video_df = get(project.info$cache[7])
world <- map_data("world")
# views_mean = colMeans(video[,c(22:27)])
# col_names = c('Europe', 'Oceania', 'Asia', 'NA', 'SA', 'Africa')
# long = c(20, 150, -100, 80, -60, 15)
# lat = c(50, -25, 40, 35, -15, 15)
# continent = data.frame(region = col_names, views = views_mean, lat = lat, long = long, stringsAsFactors = F)
# # continent = inner_join(world, continent, by = "region")
# Reference: https://stackoverflow.com/questions/28078431/how-to-create-a-world-heat-map-in-r-on-continent-level
url = "https://gist.githubusercontent.com/hrbrmstr/91ea5cc9474286c72838/raw/f3fde312c9b816dff3994f39f2bcda03209eff8f/continents.json"
stop_for_status(GET(url, write_disk("continents.json")))
continents = readOGR("continents.json")
continents_map = fortify(continents, region="CONTINENT")
cont_data = read.table(text="id,  value
Europe,  59.185692
Australia, 4.355385
Asia,  15.287538
North America, 10.400154
South America, 2.140462
Africa,  7.450000
Antarctica, 0", header=TRUE, stringsAsFactors=FALSE, sep = ",")
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png', width = 1920, height = 1080)
ggplot()+
geom_map(data = continents_map, map = continents_map, aes(x=long, y = lat, map_id = id), color = "gray")+
geom_map(data = cont_data, map = continents_map, aes(map_id = id, fill = value), color = "gray")+
scale_fill_distiller("Percentage Views")+
coord_equal()+
labs(x=NULL, y=NULL)
dev.off()
#####################################################################################################################################
# People from which region...
colnames(alpha2lat)[2] = "detected_country"
alpha2lat$detected_country = trimws(alpha2lat$detected_country)
with_coordinates = merge(x = enrolments, y = alpha2lat[,c(2,5,6)], by = "detected_country", all.x = TRUE)
colnames(with_coordinates)[14] = "lat"
colnames(with_coordinates)[15] = "long"
without_na = with_coordinates[!is.na(with_coordinates$long),]
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png', width = 1920, height = 1080)
ggplot() +
geom_map(data = world, map = world, aes(long, lat, map_id = region), color = "black", fill = "lightgray")+
stat_density2d(aes(x = long, y = lat, fill = ..level.., alpha = 0.25), bins = 30, data = without_na, geom = "polygon")
dev.off()
#######################################################################################################################################
# Finding which device is being use more often to access the course content...
desktop_percentage = video %>% group_by(title) %>% summarize(desktop = mean(desktop_device_percentage))
mobile_percentage = video %>% group_by(title) %>% summarize(mobile = mean(mobile_device_percentage))
tablet_percentage = video %>% group_by(title) %>% summarize(tablet = mean(tablet_device_percentage))
# Creating a dataframe of topic wise device used...
device_df = cbind(desktop_percentage, mobile_percentage[,2], tablet_percentage[,2])
# Converting the wide data to long data...
device_df = melt(device_df, id.vars = c('title'))
colnames(device_df) <- c('title', 'Device', 'Percentage_Watch')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png', width = 1920, height = 1080)
ggplot(device_df, aes(x = title, y = Percentage_Watch, fill = Device))+
geom_bar(stat='identity', position = position_dodge())+
theme(axis.text.x = element_text(angle=90))
dev.off()
########################################################################################################################################
# Calculating mean of watch percentage of each device for each iteration of the course...
mean_vid_df3 = cyber.security.3_video.stats[, c(17, 18, 20)]
iteration_3 = colMeans(mean_vid_df3)
mean_vid_df4 = cyber.security.4_video.stats[, c(17, 18, 20)]
iteration_4 = colMeans(mean_vid_df4)
mean_vid_df5 = cyber.security.5_video.stats[, c(17, 18, 20)]
iteration_5 = colMeans(mean_vid_df5)
mean_vid_df6 = cyber.security.6_video.stats[, c(17, 18, 20)]
iteration_6 = colMeans(mean_vid_df6)
mean_vid_df7 = cyber.security.7_video.stats[, c(17, 18, 20)]
iteration_7 = colMeans(mean_vid_df7)
# Dataframe of means of each device in columns and iterations in rows...
mean_df = rbind(iteration_3, iteration_4, iteration_5, iteration_6, iteration_7)
# # mean_df = scale(mean_df)
# mean_df = cbind(mean_df, c(3, 4, 5, 6, 7))
# ggplot(as.data.frame(mean_df), aes(x = V4))+
#   geom_line(aes(y = desktop_device_percentage), col = "red")+
#   geom_line(aes(y = mobile_device_percentage), col = "blue")+
#   geom_line(aes(y = tablet_device_percentage), col = "green")
# Converting the wide data to long data...
long_mean_df = melt(mean_df)
colnames(long_mean_df) = c('Iteration', 'Device', 'Watch_Time')
# saving the plot to the graphs/ directory...
png(file = 'C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/4.png', width = 1920, height = 1080)
ggplot()+
geom_bar(long_mean_df, mapping = aes(x = Iteration, y = Watch_Time, fill = Device), stat='identity', position = position_dodge())+
geom_line(as.data.frame(mean_df), mapping = aes(x = as.factor(rownames(mean_df)), y = mobile_device_percentage, group = 1))+
ylab("Watch Time Percent")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
# source('C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/src/eda.R')
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/1.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/2.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/3.png")
knitr::include_graphics("C:/DataScience/R/CSC8631_Data_Management/Cyber-Security-Data-Analysis/graphs/4.png")
View(long_mean_df)
